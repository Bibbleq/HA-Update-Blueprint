group:
  living_room_table_lights_disable_automations:
    name: Living room - Table lights - Disable automations
    entities:
      - input_boolean.home_party_mode
      - binary_sensor.living_room_tv_is_on

#hdmi_cec: # https://www.home-assistant.io/integrations/hdmi_cec/
  #host: 192.168.12.224
  #platform: media_player
  #devices:
    #TV: 0.0.0.0
    #RPi: 1.0.0.0
    #Fire TV Cube: 2.0.0.0
  
media_player:
  - name: Living room - TV Sony - Universal
    platform: universal # https://www.home-assistant.io/integrations/universal/
    unique_id: d82290b5-c6d8-404f-a484-70d5669dcc49
    device_class: tv
    #state_template: "{{ is_state('binary_sensor.living_room_tv_is_on', 'off') }}"
    #state_template: "{{states('binary_sensor.living_room_tv_is_on')}}"
    icon: "{{ iif(is_state('binary_sensor.living_room_tv_is_on', 'on'), 'mdi:television', 'mdi:television-off') }}"
    children:
      - media_player.living_room_tv_sony_dlna
    commands:
      turn_on:
        service: input_button.press
        data: {}
        target:
          entity_id: input_button.living_room_tv_sony_turn_on
      turn_off:
        service: input_button.press
        data: {}
        target:
          entity_id: input_button.living_room_tv_sony_turn_off
      volume_up:
        service: media_player.volume_set
        data:
          volume_level: "{{ min(1,(state_attr('media_player.living_room_tv_sony_dlna', 'volume_level') | float(0)) + 0.01) }}"
        target:
          entity_id: media_player.living_room_tv_sony_dlna
      volume_down:
        service: media_player.volume_set
        data:
          volume_level: "{{ max(0,(state_attr('media_player.living_room_tv_sony_dlna', 'volume_level') | float(0)) - 0.01) }}"
        target:
          entity_id: media_player.living_room_tv_sony_dlna
      volume_mute:
        service: media_player.volume_mute
        data:
          is_volume_muted: "{{ is_state_attr('media_player.living_room_tv_sony_dlna', 'is_volume_muted', false) | default(true) }}"
        target:
          entity_id: media_player.living_room_tv_sony_dlna
      volume_set:
        service: media_player.volume_set
        data:
          volume_level: "{{ volume_level }}"
        target:
          entity_id: media_player.living_room_tv_sony_dlna
      #media_play:
        #service: media_player.media_play
        #data: {}
        #target:
          #entity_id: media_player.bedroom_tv_samsung_integration
      #media_pause:
        #service: media_player.media_pause
        #data: {}
        #target:
          #entity_id: media_player.bedroom_tv_samsung_integration
      #media_previous_track:
        #service: media_player.media_previous_track
        #data: {}
        #target:
          #entity_id: media_player.bedroom_tv_samsung_integration
      #media_next_track:
        #service: media_player.media_next_track
        #data: {}
        #target:
          #entity_id: media_player.bedroom_tv_samsung_integration
    attributes:
      state: binary_sensor.living_room_tv_is_on
      volume_level: media_player.living_room_tv_sony_dlna|volume_level
      is_volume_muted: media_player.living_room_tv_sony_dlna|is_volume_muted

script:
  living_room_toggle_tv:
    alias: Living room - Toggle TV
    sequence:
    - if:
      - condition: state
        entity_id: binary_sensor.living_room_tv_is_on
        state: 'on'
      then:
      - service: media_player.play_media
        data:
          media_content_type: custom
          media_content_id: Turn off TV
        target:
          entity_id: media_player.living_room_fire_tv
      else:
      - service: media_player.play_media
        data:
          media_content_type: custom
          media_content_id: Turn on TV
        target:
          entity_id: media_player.living_room_fire_tv
    - wait_for_trigger:
      - platform: state
        entity_id:
        - binary_sensor.living_room_tv_is_on
      timeout:
        hours: 0
        minutes: 1
        seconds: 0
        milliseconds: 0
    mode: single
    icon: mdi:television-box

#switch:
#- platform: command_line
#switches:
#tv_sony_rpi: # https://www.home-assistant.io/integrations/braviatv/#using-hdmi-cec
##unique_id: a0483a05-3d6a-4db9-857a-f4be3bafac34
#command_on: ssh root@192.168.12.30 "echo 'on 0' | cec-client -s"
#command_off: ssh root@192.168.12.30 "echo 'standby 0' | cec-client -s"
#command_state: ssh root@192.168.12.30 "echo 'pow 0' | cec-client -s |grep 'power status:'"
#value_template: '{{ value == "power status: on" }}'

template:
  - binary_sensor:
      - name: Living room - TV is on
        unique_id: 363e5658-843f-47d4-a170-29c4b2553745
        availability: "{{ is_number(states('sensor.living_room_tv_rack_outlets_power')) }}"
        state: >-
          {{ states('sensor.living_room_tv_rack_outlets_power') | float(0) > 120 }}
