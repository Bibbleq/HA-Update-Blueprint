input_text: # You can create the input_text using the UI (Settings > Devices & Services > Helpers)
  vasttrafik_api_key:
    name: Vasttrafik - API Key
    initial: !secret vasttrafik_api_key
    mode: password
  vasttrafik_api_secret:
    name: Vasttrafik - API Secret
    initial: !secret vasttrafik_api_secret
    mode: password
  vasttrafik_stop_area_id_01:
    name: Vasttrafik - Stop Area Id 01
    initial: !secret vasttrafik_station_1_id
    mode: password

rest:
  - resource: https://ext-api.vasttrafik.se/token
    method: POST
    payload: 'grant_type=client_credentials'
    headers:
      Content-Type: application/x-www-form-urlencoded
      Authorization: >-
        Basic {{ (states('input_text.vasttrafik_api_key') + ':' + states('input_text.vasttrafik_api_secret')) | base64_encode }}
    scan_interval: 60
    sensor:
      - name: Vasttrafik - Access token
        unique_id: f3ff1f24-91cb-4a66-9cc9-e86895f706b9
        device_class: timestamp
        value_template: "{{ now() + timedelta(seconds= value_json.expires_in | int(0) ) }}"
        json_attributes:
          - access_token
          - scope
          - token_type
          - expires_in

  ##### Vasttrafik API v4 parameters:
  # stopAreaGid                       (string)    The 16-digit VÃ¤sttrafik gid of the stop area. (MANDATORY)
  # startDateTime                     (string)    The start of the time interval for which to get upcoming departures. Must be specified in RFC 3339 format or be null which means that the current time on the server is used.
  # platforms                         (string)    Filter results by platform. Multiple platforms are separated by comma. Case sensitive.
  # timeSpanInMinutes                 (int32)     The number of minutes from the start time for which to get upcoming departures. Allowed values are between 0 and 1440.
  # maxDeparturesPerLineAndDirection  (int32)     The maximum number of departures for a single line in a specific direction.
  # limit                             (int32)     The number of results to return.
  # offset                            (int32)     The zero-based start offset of the pagination.
  # includeOccupancy                  (boolean)   Includes occupancy in departure.
  # directionGid                      (string)    Filter result by last stop on journey. Must be a 16-digit VÃ¤sttrafik stop area
  - resource_template: '{{ "https://ext-api.vasttrafik.se/pr/v4/stop-areas/" ~ states("input_text.vasttrafik_stop_area_id_01") ~ "/departures" }}'
    method: GET
    params:
      # startDateTime: '{{ now().isoformat() }}'
      maxDeparturesPerLineAndDirection: 5
      limit: 50
      includeOccupancy: false
    headers:
      Content-Type: application/x-www-form-urlencoded
      Authorization: >-
        {{ state_attr('sensor.vasttrafik_access_token', 'token_type') }} {{ state_attr('sensor.vasttrafik_access_token', 'access_token') }}
    scan_interval: 60
    sensor:
      - name: Vasttrafik - Departure table
        unique_id: ceb54fac-0e5f-4524-8da9-564f92de4cf5
        device_class: timestamp
        value_template: '{{ now() }}'
        #json_attributes_path: "$.Results"
        json_attributes:
          - Results

template:
  sensor:
    - name: Vasttrafik - Departure table - City centre
      unique_id: 39b3d993-e3fb-4600-af43-d244a8bc7703
      device_class: timestamp
      availability: '{{ has_value("sensor.vasttrafik_departure_table") }}'
      state: '{{ states("sensor.vasttrafik_departure_table") }}'
      attributes:
        Departure: >
          {{
            state_attr("sensor.vasttrafik_departure_table", "Results")
            | selectattr("platform", "defined")
            | selectattr("platform", "in", ["A","a", "C", "c"])
            | list
          }}

    - name: Vasttrafik - Departure table - Suburb
      unique_id: 74a5aac6-c480-409d-a77b-fb49ec0e65ff
      device_class: timestamp
      availability: '{{ has_value("sensor.vasttrafik_departure_table") }}'
      state: '{{ states("sensor.vasttrafik_departure_table") }}'
      attributes:
        Departure: >
          {{
            state_attr("sensor.vasttrafik_departure_table", "Departure")
            | selectattr("platform", "defined")
            | selectattr("platform", "in", ["B","b"])
            | list
          }}

#sensor:
  # https://www.home-assistant.io/integrations/vasttrafik/
  #- platform: vasttrafik
  #  key: !secret vasttrafik_api_key
  #  secret: !secret vasttrafik_api_secret
  #  departures:
  #    - from: !secret vasttrafik_station_1_id
  #      name: !secret vasttrafik_station_1_sensor_name

logger:
  logs:
    homeassistant.components.rest.sensor: debug
