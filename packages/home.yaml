emulated_hue:  # https://www.home-assistant.io/integrations/emulated_hue
  host_ip: !secret ip_home_assistant
  listen_port: 80
  #advertise_ip: 10.0.0.10
  #advertise_port: 8080
  #off_maps_to_on_domains:
    #- script
    #- scene
  expose_by_default: false
  exposed_domains:
    - light
    - switch

  entities:
    #### Home ####
    input_boolean.home_party_mode:
      hidden: false

    #### Balcony ####
    light.balcony_lamp_light:
      hidden: false
    light.balcony_string_lights:
      hidden: false
    
    #### Bathroom ####
    light.bathroom_ceiling_lights:
      hidden: false
    light.bathroom_mirror_light:
      hidden: false
    
    #### Bedroom ####
    light.bedroom_carol_light:
      hidden: false
    light.bedroom_closet_lights:
      hidden: false
    light.bedroom_edward_light:
      hidden: false
    switch.bedroom_power_strip_1_socket_4: # TV Samsung
      hidden: false

    #### Corridor ####
    light.corridor_lights_all:
      hidden: false

    #### Guest bathroom ####
    light.guest_bathroom_ceiling_light:
      hidden: false
    light.guest_bathroom_mirror_lights:
      hidden: false

    #### Guest room ####
    light.guest_room_closet_lights:
      hidden: false
    light.guest_room_wall_lights:
      hidden: false

    #### Hall ####
    light.hall_ceiling_light:
      hidden: false

    #### Kitchen ####
    light.kitchen_bench_lights:
      hidden: false
    light.kitchen_table_lights:
      hidden: false

    #### Living room ####

    #### Office ####
    light.office_ceiling_lines:
      hidden: false
    light.office_workstation_lights:
      hidden: false
    light.kitchen_curtain_s_lights:
      hidden: false


script:
  home_reboot_all_shelly_devices:
    alias: Home - Reboot all Shelly devices
    sequence:
    - service: button.press
      data: {}
      target:
        entity_id: '{{ expand(integration_entities(''shelly'')) | selectattr(''domain'',
          ''eq'', ''button'') | selectattr(''entity_id'', ''search'', ''_reboot'') |
          map(attribute=''entity_id'') | list }}'
    mode: restart

  home_reboot_network:
    alias: Home - Reboot network
    icon: mdi:restart
    mode: restart
    sequence:
    - service: button.press
      data: {}
      target:
        entity_id:
        - button.aimesh_router_reboot
        - button.aimesh_node_reboot
    - delay:
        hours: 0
        minutes: 0
        seconds: 15
        milliseconds: 0
    - wait_for_trigger:
      - platform: state
        entity_id:
        - sensor.aimesh_router_boot_time
      timeout: 300
    - service: button.press
      data: {}
      target:
        entity_id: '{{ states.button | selectattr(''entity_id'', ''search'', ''reboot'')
          | map(attribute=''entity_id'') | list }}'


template:
  - trigger:
    - id: Motion # When motion is detected
      platform: state
      entity_id:
        - binary_sensor.bathroom_motion
        - binary_sensor.bathroom_motion_dual_sensors_state
        - binary_sensor.bathroom_motion_occupancy
        - binary_sensor.bathroom_shower_motion_occupancy
        - binary_sensor.guest_bathroom_motion_iaszone
        - binary_sensor.guest_bathroom_motion_occupancy
        - binary_sensor.guest_room_motion
        - binary_sensor.guest_room_motion_occupancy
        - binary_sensor.hall_motion_occupancy
        - binary_sensor.kitchen_bench_motion_occupancy
        - binary_sensor.kitchen_bench_motion_on_off
        - binary_sensor.kitchen_table_motion_occupancy
        - binary_sensor.kitchen_table_motion_on_off
        - binary_sensor.office_motion_occupancy
        - binary_sensor.office_workstation_motion_occupancy
        - binary_sensor.office_workstation_motion_iaszone
      from: "off"
      to: "on"
    - id: Others # When other activities are detected
      platform: state
      entity_id:
        - binary_sensor.balcony_door
        - binary_sensor.balcony_string_lights_channel_1_input
        - binary_sensor.bathroom_ceiling_lights_channel_1_input
        - binary_sensor.bathroom_door
        - binary_sensor.bathroom_mirror_light_input
        - binary_sensor.bedroom_ceiling_lights_input
        - binary_sensor.bedroom_closet_door
        - binary_sensor.bedroom_closet_lights_input
        - binary_sensor.bedroom_dogs_bed_occupied
        - binary_sensor.guest_bathroom_ceiling_light_input
        - binary_sensor.guest_bathroom_door
        - binary_sensor.guest_bathroom_mirror_lights_input
        - binary_sensor.guest_room_closet_door
        - binary_sensor.guest_room_closet_lights_input
        - binary_sensor.guest_room_door
        - binary_sensor.guest_room_door_outlets_ceiling_lights_input
        - binary_sensor.hall_front_door
        - binary_sensor.hall_light_switch_input
        - binary_sensor.kitchen_ceiling_lights_table_lights_input
        - binary_sensor.kitchen_ceiling_lights_windows_lights_input
        - binary_sensor.kitchen_bench_left_light_input
        - binary_sensor.kitchen_bench_right_light_input
        - binary_sensor.kitchen_dishwasher_door
        - binary_sensor.kitchen_windows
        - binary_sensor.living_room_lights_map_wall_input
        - binary_sensor.living_room_lights_tv_wall_input
        - binary_sensor.living_room_windows_left
        - binary_sensor.living_room_windows_right
        - binary_sensor.office_door
        - binary_sensor.office_windows_outlets_ceiling_lights_input
      from:
        - "on"
        - "off"
      to:
        - "on"
        - "off"
    sensor:
      - name: Home - Last activity
        unique_id: 90dca34c-260c-4c54-92cb-dbc760dcb2d4
        icon: mdi:motion-sensor
        device_class: timestamp
        state: "{{ now() }}"
        attributes:
          entity_id: "{{ trigger.entity_id }}"
          entity_friendly_name: >-
            {% if state_attr( trigger.entity_id, 'friendly_name' ) | default('none') %}
              {{ state_attr( trigger.entity_id, 'friendly_name' ) | default('none') }}
            {% else %}
              none
            {% endif %}
          area_name: >-
            {% if area_name( trigger.entity_id ) | default('none') %}
              {{ area_name( trigger.entity_id ) | default('none') }}
            {% else %}
              none
            {% endif %}
          last_update: "{{ now() }}"
          trigger: "{{ trigger }}"
