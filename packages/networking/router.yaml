automation:
  - alias: Media centre - Router - WAN IP changed
    id: '1670957751694'
    description: ''
    trigger:
    - platform: state
      entity_id:
      - sensor.aimesh_router_wan_ip
      for:
        hours: 0
        minutes: 5
        seconds: 0
      not_from:
      - unknown
      - unavailable
    condition: []
    action:
    - service: notify.signal_edward
      data:
        message: The WAN IP address has changed from {{ trigger.from_state.state }}
          to {{ trigger.to_state.state }}.
    mode: single
  - alias: Media centre - Router - Recover when frozen
    id: '1668551792507'
    description: ''
    trigger:
    - id: Restart HTTP service
      platform: state
      entity_id:
      - sensor.aimesh_router_cpu
      - sensor.aimesh_router_ram
      for:
        hours: 0
        minutes: 10
        seconds: 0
    - id: Reboot router
      platform: state
      entity_id:
      - sensor.aimesh_router_cpu
      - sensor.aimesh_router_ram
      for:
        hours: 0
        minutes: 20
        seconds: 0
    - id: Power cycle router
      platform: state
      entity_id:
      - sensor.aimesh_router_cpu
      - sensor.aimesh_router_ram
      for:
        minutes: 30
    condition: []
    action:
    - service: notify.signal_edward
      data:
        message: 'Router is not updating {{ state_attr(trigger.entity_id, ''friendly_name'')
          }}.

          State: {{ states(trigger.entity_id) }}

          Last changed: {{ trigger.to_state.last_changed | default(''unavailable'')
          }}

          Recovery action: {{ trigger.id }}.'
      continue_on_error: true
    - delay:
        hours: 0
        minutes: 0
        seconds: 5
        milliseconds: 0
    - choose:
      - conditions:
        - condition: trigger
          id: Restart HTTP service
        sequence:
        - service: button.press
          data: {}
          target:
            entity_id: button.aimesh_router_restart_http_daemon
      - conditions:
        - condition: trigger
          id: Reboot router
        sequence:
        - service: button.press
          data: {}
          target:
            entity_id: button.aimesh_router_reboot
      - conditions:
        - condition: trigger
          id: Power cycle router
        sequence:
        - service: script.media_centre_router_power_cycle
          data: {}
    mode: single
  - alias: Home - Network - New device connected
    id: '1666531818056'
    description: Create a HA notification for any new device connected to the local
      network
    trigger:
    - platform: event
      event_type: asusrouter_device_connected
    condition: []
    action:
    - service: persistent_notification.create
      data_template:
        title: Device has joined the local network
        message: 'MAC: {{trigger.event.data.mac}}, IP: {{trigger.event.data.ip}}, name:
          {{trigger.event.data.name}}'
      continue_on_error: true
    - service: notify.signal_edward
      data:
        message: 'A new device joined the local network:

          Name: {{trigger.event.data.name}}

          IP: {{trigger.event.data.ip}}

          MAC: {{trigger.event.data.mac}}'
      continue_on_error: true
    mode: queued
    max: 100

script:
  media_centre_router_power_cycle:
    alias: Media centre - Router - Power cycle
    icon: mdi:router-wireless-off
    mode: single
    sequence:
    - service: switch.turn_off
      data: {}
      target:
        entity_id: switch.media_centre_power_strip_socket_1
    - delay:
        hours: 0
        minutes: 0
        seconds: 30
        milliseconds: 0
    - service: switch.turn_on
      data: {}
      target:
        entity_id: switch.media_centre_power_strip_socket_1

input_select:
  home_guest_network_ssid_list:
    name: Home - Guest network - SSID list
    options:
      - Access Point Break
      - All Your Bandwidth
      - Bandwidth Bay
      - Connect Corner
      - Connection Collect
      - Don't Hack My WiFi
      - Get Off My LAN!
      - House LAN-nister
      - House of Cards 1x5
      - Hotspot Drop
      - Internet's Open Bar
      - Keep It On The Down
      - LAN Before Time
      - LAN of the Free
      - Net Neutrality
      - Net Work Cafe
      - Net Work Your Way
      - Netgear and Tear
      - Networking Ninjas
      - Network Neighbors
      - Network Nook
      - Network of Trust
      - No Wi-Fi for You
      - Password is...
      - Social Connection
      - Super LAN Bros
      - Surf's Up, WiFi's Up
      - The LAN Before Time
      - The LAN Down Under
      - The Mighty WiFi
      - The Netmen
      - The Netpocalypse
      - The Network Nest
      - The Promised LAN
      - The Signal's Calling
      - The Social Net
      - The WiFi Awakens
      - The WiFi Connection
      - The WiFi Next Door
      - The WiFi Zone
      - The Wireless World
      - The Wireless Wiz
      - WiFi Fever
      - WiFi and Chill
      - WiFi at Last
      - WiFi for Show
      - WiFi in the Sky
      - WiFi or Die
      - WiFi Wizardry
      - WiFi-Me-Not
      - WiFi-nally
      - Wi-Fi Unchained
      - Wi-Fi, Why Not?
      - Wi-Fight, Unite!
      - Wi-Fry Chicken
      - Wireless Forest
      - Wireless Garden
      - Wireless Wardrobe

template:
  - binary_sensor:
    - name: Media centre - Internet status
      unique_id: c48b19c3-7288-477f-94b8-1c201b6ade7a
      device_class: connectivity
      state: "{{ states('binary_sensor.aimesh_router_wan') }}"

  - trigger:
      #- platform: time_pattern
      #  minutes: "/5"
      - platform: template
        value_template: "{{ now().weekday() == 3 and now().hour == 4 }}"
    sensor:
      #- name: Home - Guest network - SSID
      #  unique_id: 8e000686-b26c-4e32-badb-6a39fc3a7890
      #  state: "{{ state_attr('input_select.home_guest_network_ssid_list', 'options') | random }}"
      - name: Home - Guest network
        unique_id: 99db9c44-6c34-43b6-90c6-1708b7988926
        state: "{{ this.attributes.ssid is defined and this.attributes.ssid is string }}"
        attributes:
          ssid: "{{ state_attr('input_select.home_guest_network_ssid_list', 'options') | random }}"
          password: >
            {% set char_table = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ.,-_+*^!?" %}
            {%- set ns = namespace( pass = "" ) %}
            {%- for i in range(1, range(21, 27) | random) | list %}
              {%- set ns.pass = ns.pass ~ char_table | random %}
            {%- endfor %}
            {{ ns.pass }}
          qrcode: "WIFI:S:{{ this.attributes.ssid | default('No SSID') }};T:WPA;P:{{ this.attributes.password | default('No password') }};;"
