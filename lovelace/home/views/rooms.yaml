    title: Rooms
    theme: Backend-selected
    path: rooms
    badges: []
    cards:
      - type: custom:vertical-stack-in-card
        cards:
          - type: custom:room-card
            title: Balcony
            entity: light.balcony_all_lights
            info_entities:
              - entity: binary_sensor.balcony_door
                show_icon: true
                icon:
                  conditions:
                    - icon: mdi:door-open
                      condition: equals
                      attribute: state
                      value: 'on'
                      styles:
                        color: red
                hide_if:
                  conditions:
                    - condition: equals
                      value: 'off'
              - entity: sensor.balcony_total_power
            show_icon: true
            tap_action:
              action: toggle
            double_tap_action:
              action: more-info
          - type: grid
            square: false
            cards:
              - type: custom:mushroom-light-card
                entity: light.balcony_string_lights
                name: String lights
                layout: vertical
                fill_container: true
                secondary_info: state
                use_light_color: false
                show_brightness_control: true
                collapsible_controls: true
              - type: custom:mushroom-light-card
                entity: light.balcony_lamp_light
                name: Lamp
                layout: vertical
                fill_container: true
                secondary_info: state
                use_light_color: false
                show_brightness_control: false
                collapsible_controls: true
              - type: custom:decluttering-card
                template: template_socket
                variables:
                  - entity_id: switch.balcony_lamp_sockets
              - type: custom:mushroom-entity-card
                entity: weather.home
                fill_container: true
                layout: vertical
                primary_info: state
                secondary_info: none
              - type: custom:mushroom-template-card
                primary: '{{ state_attr(entity, ''temperature'') }}Â°C'
                secondary: ''
                icon: mdi:thermometer
                icon_color: >-
                  {% set curr = state_attr(entity, 'temperature') | float(-99)
                  %} {% set high_value = 22 %} {% set high_red = 255 %} {% set
                  high_green = 0 %} {% set high_blue = 0 %} {% set mid_h_value =
                  19 %} {% set mid_h_red = 0 %} {% set mid_h_green = 255 %} {%
                  set mid_h_blue = 0 %} {% set mid_l_value = 15 %} {% set
                  mid_l_red = 0 %} {% set mid_l_green = 255 %} {% set mid_l_blue
                  = 0 %} {% set low_value = 6 %} {% set low_red = 0 %} {% set
                  low_green = 0 %} {% set low_blue = 255 %} {% if curr >
                  mid_h_value %}
                    {% set curr_point = (curr - mid_h_value) / (high_value - mid_h_value) %}
                    {% set red = (curr_point * (high_red - mid_h_red) + mid_h_red) %}
                    {% set green = (curr_point * (high_green - mid_h_green) + mid_h_green) %}
                    {% set blue = (curr_point * (high_blue - mid_h_blue) + mid_h_blue) %}
                  {% elif curr > mid_l_value %}
                    {% set curr_point = (curr - mid_h_value) / (mid_h_value - mid_l_value) %}
                    {% set red = (curr_point * (mid_h_red - mid_l_red) + mid_l_red) %}
                    {% set green = (curr_point * (mid_h_green - mid_l_green) + mid_l_green) %}
                    {% set blue = (curr_point * (mid_h_blue - mid_l_blue) + mid_l_blue) %}
                  {% else %}
                    {% set curr_point = (mid_l_value - curr) / (mid_l_value - low_value) %}
                    {% set red = mid_l_red - (curr_point * (mid_l_red - low_red)) %}
                    {% set green = mid_l_green - (curr_point * (mid_l_green - low_green)) %}
                    {% set blue = mid_l_blue - (curr_point * (mid_l_blue - low_blue)) %}
                  {% endif %} {% set red = min(255, max(0, red | round(0) )) %}
                  {% set green = min(255, max(0, green | round(0) )) %} {% set
                  blue = min(255, max(0, blue | round(0) )) %} {{ '#' + '%02x' |
                  format( red | int ) + '%02x' | format( green | int ) + '%02x'
                  | format( blue | int ) }}
                layout: vertical
                fill_container: true
                entity: weather.home
                tap_action:
                  action: more-info
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                entity: weather.home
                primary: '{{ state_attr(entity, ''humidity'') }}%'
                secondary: ''
                icon: mdi:water-percent
                icon_color: >-
                  {% set curr = state_attr(entity, 'humidity') | float(-99) %}
                  {% set high_value = 90 %} {% set high_red = 0 %} {% set
                  high_green = 0 %} {% set high_blue = 255 %} {% set mid_h_value
                  = 60 %} {% set mid_h_red = 0 %} {% set mid_h_green = 255 %} {%
                  set mid_h_blue = 0 %} {% set mid_l_value = 40 %} {% set
                  mid_l_red = 0 %} {% set mid_l_green = 255 %} {% set mid_l_blue
                  = 0 %} {% set low_value = 30 %} {% set low_red = 255 %} {% set
                  low_green = 0 %} {% set low_blue = 0 %} {% if curr >
                  mid_h_value %}
                    {% set curr_point = (curr - mid_h_value) / (high_value - mid_h_value) %}
                    {% set red = (curr_point * (high_red - mid_h_red) + mid_h_red) %}
                    {% set green = (curr_point * (high_green - mid_h_green) + mid_h_green) %}
                    {% set blue = (curr_point * (high_blue - mid_h_blue) + mid_h_blue) %}
                  {% elif curr > mid_l_value %}
                    {% set curr_point = (curr - mid_h_value) / (mid_h_value - mid_l_value) %}
                    {% set red = (curr_point * (mid_h_red - mid_l_red) + mid_l_red) %}
                    {% set green = (curr_point * (mid_h_green - mid_l_green) + mid_l_green) %}
                    {% set blue = (curr_point * (mid_h_blue - mid_l_blue) + mid_l_blue) %}
                  {% else %}
                    {% set curr_point = (mid_l_value - curr) / (mid_l_value - low_value) %}
                    {% set red = mid_l_red - (curr_point * (mid_l_red - low_red)) %}
                    {% set green = mid_l_green - (curr_point * (mid_l_green - low_green)) %}
                    {% set blue = mid_l_blue - (curr_point * (mid_l_blue - low_blue)) %}
                  {% endif %} {% set red = min(255, max(0, red | round(0) )) %}
                  {% set green = min(255, max(0, green | round(0) )) %} {% set
                  blue = min(255, max(0, blue | round(0) )) %} {{ '#' + '%02x' |
                  format( red | int ) + '%02x' | format( green | int ) + '%02x'
                  | format( blue | int ) }}
                layout: vertical
                fill_container: true
                tap_action:
                  action: more-info
                hold_action:
                  action: more-info
              - type: custom:mushroom-cover-card
                entity: cover.balcony_curtain
                layout: vertical
                fill_container: true
                show_buttons_control: false
                show_position_control: false
                name: Curtains
      - type: custom:vertical-stack-in-card
        cards:
          - type: custom:room-card
            title: Bathroom
            entity: light.bathroom_all_lights
            info_entities:
              - entity: binary_sensor.bathroom_motion_dual_sensors_state
                show_icon: true
                icon:
                  conditions:
                    - icon: mdi:motion-sensor
                      condition: equals
                      attribute: state
                      value: 'on'
                      styles:
                        color: red
                hide_if:
                  conditions:
                    - condition: equals
                      value: 'off'
              - entity: binary_sensor.bathroom_door
                show_icon: true
                icon:
                  conditions:
                    - icon: mdi:door
                      condition: equals
                      attribute: state
                      value: 'off'
                      styles:
                        color: red
                hide_if:
                  conditions:
                    - condition: equals
                      value: 'on'
              - entity: sensor.bathroom_total_power
            show_icon: true
            tap_action:
              action: toggle
            double_tap_action:
              action: more-info
          - type: grid
            square: false
            cards:
              - type: custom:mushroom-light-card
                entity: light.bathroom_ceiling_lights
                name: Ceiling lights
                layout: vertical
                fill_container: true
                secondary_info: state
                use_light_color: false
                show_brightness_control: true
                collapsible_controls: true
              - type: custom:mushroom-light-card
                entity: light.bathroom_mirror_light
                name: Mirror's lights
                layout: vertical
                fill_container: true
                secondary_info: state
                use_light_color: false
                show_brightness_control: false
                collapsible_controls: true
              - type: custom:mushroom-template-card
                primary: Mirror's outlets
                entity: switch.bathroom_mirror_outlets
                secondary: |-
                  {% if is_state(entity, 'on') %}
                    {{ states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity) | capitalize }}
                  {% endif %}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                    {% set curr = states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) %}
                    {% set high_value = 100 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 25 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 10 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                icon: mdi:power-socket-de
                layout: vertical
                fill_container: true
                tap_action:
                  action: toggle
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                primary: Towel warmer
                secondary: >-
                  {% if (states('sensor.bathroom_towel_warmer_power') |
                  float(-99)) > 0 %}
                    {{ states('sensor.bathroom_towel_warmer_power') | float(-99) | round(1) }}W
                  {% endif %}
                icon: >-
                  {{ iif((states('sensor.bathroom_towel_warmer_power') |
                  float(-99)) > 5, 'mdi:radiator', 'mdi:radiator-disabled') }}
                entity: binary_sensor.bathroom_towel_warmer_status
                fill_container: true
                layout: vertical
                multiline_secondary: true
                icon_color: >-
                  {{ iif((states('sensor.bathroom_towel_warmer_power') |
                  float(-99)) > 5, 'red', '') }}
                tap_action:
                  action: more-info
                hold_action:
                  action: more-info
                double_tap_action:
                  action: none
              - type: custom:mushroom-template-card
                entity: climate.bathroom_thermostat
                primary: >-
                  {{ state_attr(entity, 'current_temperature') | float(-99) |
                  round(1) }}Â°C
                secondary: '{{ states(entity) | capitalize }}'
                icon: mdi:thermometer
                icon_color: >-
                  {% set curr = state_attr(entity, 'current_temperature') |
                  float(-99) %} {% set high_value = 24 %} {% set high_red = 255
                  %} {% set high_green = 0 %} {% set high_blue = 0 %} {% set
                  mid_h_value = 22 %} {% set mid_h_red = 0 %} {% set mid_h_green
                  = 255 %} {% set mid_h_blue = 0 %} {% set mid_l_value = 19 %}
                  {% set mid_l_red = 0 %} {% set mid_l_green = 255 %} {% set
                  mid_l_blue = 0 %} {% set low_value = 17 %} {% set low_red = 0
                  %} {% set low_green = 0 %} {% set low_blue = 255 %} {% if curr
                  > mid_h_value %}
                    {% set curr_point = (curr - mid_h_value) / (high_value - mid_h_value) %}
                    {% set red = (curr_point * (high_red - mid_h_red) + mid_h_red) %}
                    {% set green = (curr_point * (high_green - mid_h_green) + mid_h_green) %}
                    {% set blue = (curr_point * (high_blue - mid_h_blue) + mid_h_blue) %}
                  {% elif curr > mid_l_value %}
                    {% set curr_point = (curr - mid_h_value) / (mid_h_value - mid_l_value) %}
                    {% set red = (curr_point * (mid_h_red - mid_l_red) + mid_l_red) %}
                    {% set green = (curr_point * (mid_h_green - mid_l_green) + mid_l_green) %}
                    {% set blue = (curr_point * (mid_h_blue - mid_l_blue) + mid_l_blue) %}
                  {% else %}
                    {% set curr_point = (mid_l_value - curr) / (mid_l_value - low_value) %}
                    {% set red = mid_l_red - (curr_point * (mid_l_red - low_red)) %}
                    {% set green = mid_l_green - (curr_point * (mid_l_green - low_green)) %}
                    {% set blue = mid_l_blue - (curr_point * (mid_l_blue - low_blue)) %}
                  {% endif %} {% set red = min(255, max(0, red | round(0) )) %}
                  {% set green = min(255, max(0, green | round(0) )) %} {% set
                  blue = min(255, max(0, blue | round(0) )) %} {{ '#' + '%02x' |
                  format( red | int ) + '%02x' | format( green | int ) + '%02x'
                  | format( blue | int ) }}
                layout: vertical
                fill_container: true
                multiline_secondary: true
                tap_action:
                  confirmation: true
                  action: call-service
                  service: script.climate_toggle
                  data:
                    climate: climate.bathroom_thermostat
              - type: custom:mushroom-template-card
                entity: sensor.bathroom_thermostat_humidity
                primary: '{{ states(entity) | float(-99) | round(1) }} %'
                secondary: ''
                icon: mdi:water-percent
                icon_color: >-
                  {% set humidity = states(entity) | float(-99) %} {% if
                  humidity > 43 %}
                    blue
                  {% elif humidity > 37 %}
                    green
                  {% else %}
                    red
                  {% endif %}
                layout: vertical
                fill_container: true
                tap_action:
                  action: more-info
                hold_action:
                  action: more-info
      - type: custom:vertical-stack-in-card
        cards:
          - type: custom:room-card
            title: Bedroom
            entity: light.bedroom_beds_lights
            info_entities:
              - entity: sensor.bedroom_total_power
            show_icon: true
            tap_action:
              action: toggle
            double_tap_action:
              action: more-info
          - type: conditional
            conditions:
              - entity: media_player.bedroom_tv_samsung_universal
                state: 'on'
              - entity: switch.bedroom_power_strip_1_tv_samsung
                state: 'on'
            card:
              type: custom:mushroom-media-player-card
              layout: vertical
              entity: media_player.bedroom_tv_samsung_universal
              name: TV Samsung
              icon: mdi:television
              fill_container: true
              show_volume_level: false
              use_media_info: false
              volume_controls:
                - volume_set
              collapsible_controls: true
              media_controls: []
              secondary_info: none
              tap_action:
                action: call-service
                service: switch.toggle
                data: {}
                target:
                  entity_id: switch.bedroom_power_strip_1_tv_samsung
          - type: grid
            square: false
            cards:
              - type: conditional
                conditions:
                  - entity: media_player.bedroom_tv_samsung_universal
                    state_not: 'on'
                card:
                  type: custom:mushroom-template-card
                  primary: TV Samsung
                  secondary: ''
                  icon: mdi:television
                  fill_container: true
                  layout: vertical
                  entity: media_player.bedroom_tv_samsung_universal
                  icon_color: >-
                    {{ iif(is_state(entity, 'on'), 'green',
                    iif(is_state('switch.bedroom_power_strip_1_tv_samsung', 'on'),
                    'red', '')) }}
                  tap_action:
                    action: call-service
                    service: switch.toggle
                    data: {}
                    target:
                      entity_id: switch.bedroom_power_strip_1_tv_samsung
              - type: custom:mushroom-light-card
                entity: light.bedroom_carol_light
                name: Carol's lights
                layout: vertical
                fill_container: true
                secondary_info: state
                use_light_color: false
                show_brightness_control: true
                collapsible_controls: true
              - type: custom:mushroom-light-card
                entity: light.bedroom_edward_light
                name: Edward's lights
                layout: vertical
                fill_container: true
                secondary_info: state
                use_light_color: false
                show_brightness_control: true
                collapsible_controls: true
              - type: custom:mushroom-template-card
                primary: Carol's outlets
                entity: switch.bedroom_outlets_carol
                secondary: |-
                  {% if is_state(entity, 'on') %}
                    {{ states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity) | capitalize }}
                  {% endif %}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                    {% set curr = states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) %}
                    {% set high_value = 100 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 25 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 10 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                icon: mdi:power-socket-de
                layout: vertical
                fill_container: true
                tap_action:
                  action: toggle
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                primary: Edward's outlets
                entity: switch.bedroom_outlets_edward
                secondary: |-
                  {% if is_state(entity, 'on') %}
                    {{ states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity) | capitalize }}
                  {% endif %}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                    {% set curr = states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) %}
                    {% set high_value = 100 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 25 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 10 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                icon: mdi:power-socket-de
                layout: vertical
                fill_container: true
                tap_action:
                  action: toggle
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                primary: TV rack outlets
                entity: switch.bedroom_tv_rack
                secondary: |-
                  {% if is_state(entity, 'on') %}
                    {{ states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity) | capitalize }}
                  {% endif %}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                    {% set curr = states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) %}
                    {% set high_value = 100 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 25 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 10 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                icon: mdi:power-socket-de
                layout: vertical
                fill_container: true
                tap_action:
                  action: toggle
                hold_action:
                  action: more-info
              - type: custom:mushroom-cover-card
                entity: cover.bedroom_curtains_dual
                layout: vertical
                fill_container: true
                show_buttons_control: false
                show_position_control: false
                name: Covers
              - type: custom:mushroom-template-card
                entity: climate.bedroom_thermostat
                primary: >-
                  {{ state_attr(entity, 'current_temperature') | float(-99) |
                  round(1) }}Â°C
                secondary: '{{ states(entity) | capitalize }}'
                icon: mdi:thermometer
                icon_color: >-
                  {% set curr = state_attr(entity, 'current_temperature') |
                  float(-99) %} {% set high_value = 24 %} {% set high_red = 255
                  %} {% set high_green = 0 %} {% set high_blue = 0 %} {% set
                  mid_h_value = 22 %} {% set mid_h_red = 0 %} {% set mid_h_green
                  = 255 %} {% set mid_h_blue = 0 %} {% set mid_l_value = 19 %}
                  {% set mid_l_red = 0 %} {% set mid_l_green = 255 %} {% set
                  mid_l_blue = 0 %} {% set low_value = 17 %} {% set low_red = 0
                  %} {% set low_green = 0 %} {% set low_blue = 255 %} {% if curr
                  > mid_h_value %}
                    {% set curr_point = (curr - mid_h_value) / (high_value - mid_h_value) %}
                    {% set red = (curr_point * (high_red - mid_h_red) + mid_h_red) %}
                    {% set green = (curr_point * (high_green - mid_h_green) + mid_h_green) %}
                    {% set blue = (curr_point * (high_blue - mid_h_blue) + mid_h_blue) %}
                  {% elif curr > mid_l_value %}
                    {% set curr_point = (curr - mid_h_value) / (mid_h_value - mid_l_value) %}
                    {% set red = (curr_point * (mid_h_red - mid_l_red) + mid_l_red) %}
                    {% set green = (curr_point * (mid_h_green - mid_l_green) + mid_l_green) %}
                    {% set blue = (curr_point * (mid_h_blue - mid_l_blue) + mid_l_blue) %}
                  {% else %}
                    {% set curr_point = (mid_l_value - curr) / (mid_l_value - low_value) %}
                    {% set red = mid_l_red - (curr_point * (mid_l_red - low_red)) %}
                    {% set green = mid_l_green - (curr_point * (mid_l_green - low_green)) %}
                    {% set blue = mid_l_blue - (curr_point * (mid_l_blue - low_blue)) %}
                  {% endif %} {% set red = min(255, max(0, red | round(0) )) %}
                  {% set green = min(255, max(0, green | round(0) )) %} {% set
                  blue = min(255, max(0, blue | round(0) )) %} {{ '#' + '%02x' |
                  format( red | int ) + '%02x' | format( green | int ) + '%02x'
                  | format( blue | int ) }}
                layout: vertical
                fill_container: true
                multiline_secondary: true
                tap_action:
                  confirmation: true
                  action: call-service
                  service: script.climate_toggle
                  data:
                    climate: climate.bedroom_thermostat
              - type: custom:mushroom-template-card
                primary: '{{ states(entity) | float(-99) | round(1) }} %'
                secondary: ''
                icon: mdi:water-percent
                icon_color: >-
                  {% set humidity = states(entity) | float(-99) %} {% if
                  humidity > 43 %}
                    blue
                  {% elif humidity > 37 %}
                    green
                  {% else %}
                    red
                  {% endif %}
                entity: sensor.bedroom_thermostat_humidity
                layout: vertical
                fill_container: true
                tap_action:
                  action: more-info
                hold_action:
                  action: more-info
              - type: custom:mushroom-light-card
                entity: light.bedroom_closet_lights
                name: Closet - Lights
                layout: vertical
                fill_container: true
                secondary_info: state
                use_light_color: false
                show_brightness_control: true
                collapsible_controls: true
              - type: custom:mushroom-template-card
                entity: switch.bedroom_closet_outlets
                primary: Closet - Outlets
                secondary: |-
                  {% if is_state(entity, 'on') %}
                    {{ states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity) | capitalize }}
                  {% endif %}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                    {% set curr = states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) %}
                    {% set high_value = 100 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 25 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 10 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                icon: mdi:power-socket-de
                layout: vertical
                fill_container: true
                tap_action:
                  action: toggle
                  confirmation: true
                hold_action:
                  action: more-info
      - type: custom:vertical-stack-in-card
        cards:
          - type: custom:room-card
            title: Guest room
            entity: light.guest_room_wall_lights
            info_entities:
              - entity: binary_sensor.guest_room_motion
                show_icon: true
                icon:
                  conditions:
                    - icon: mdi:motion-sensor
                      condition: equals
                      attribute: state
                      value: 'on'
                      styles:
                        color: red
                hide_if:
                  conditions:
                    - condition: equals
                      value: 'off'
              - entity: binary_sensor.guest_room_door
                show_icon: true
                icon:
                  conditions:
                    - icon: mdi:door
                      condition: equals
                      attribute: state
                      value: 'off'
                      styles:
                        color: red
                hide_if:
                  conditions:
                    - condition: equals
                      value: 'on'
              - entity: sensor.guest_room_total_power
            show_icon: true
            tap_action:
              action: toggle
            double_tap_action:
              action: more-info
          - type: grid
            square: false
            cards:
              - type: custom:mushroom-light-card
                entity: light.guest_room_wall_lights
                name: Mountains lights
                layout: vertical
                fill_container: true
                secondary_info: state
                use_light_color: true
                show_brightness_control: true
                collapsible_controls: true
              - type: custom:mushroom-template-card
                primary: Door's outlets
                entity: switch.guest_room_door_outlets_outlet
                secondary: |-
                  {% if is_state(entity, 'on') %}
                    {{ states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity) | capitalize }}
                  {% endif %}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                    {% set curr = states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) %}
                    {% set high_value = 100 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 25 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 10 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                icon: mdi:power-socket-de
                layout: vertical
                fill_container: true
                tap_action:
                  action: toggle
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                primary: Windows outlets
                entity: switch.guest_room_windows_outlets
                secondary: |-
                  {% if is_state(entity, 'on') %}
                    {{ states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity) | capitalize }}
                  {% endif %}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                    {% set curr = states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) %}
                    {% set high_value = 100 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 25 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 10 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                icon: mdi:power-socket-de
                layout: vertical
                fill_container: true
                tap_action:
                  action: toggle
                hold_action:
                  action: more-info
              - type: custom:mushroom-cover-card
                entity: cover.guest_room_shutter_cover
                layout: vertical
                fill_container: true
                show_buttons_control: false
                show_position_control: false
                name: Shutter
              - type: custom:mushroom-cover-card
                entity: cover.guest_room_roller_blind_cover
                layout: vertical
                fill_container: true
                show_buttons_control: false
                show_position_control: false
                name: Roller blind
              - type: custom:mushroom-template-card
                entity: climate.guest_room_thermostat
                primary: >-
                  {{ state_attr(entity, 'current_temperature') | float(-99) |
                  round(1) }}Â°C
                secondary: '{{ states(entity) | capitalize }}'
                icon: mdi:thermometer
                icon_color: >-
                  {% set curr = state_attr(entity, 'current_temperature') |
                  float(-99) %} {% set high_value = 24 %} {% set high_red = 255
                  %} {% set high_green = 0 %} {% set high_blue = 0 %} {% set
                  mid_h_value = 22 %} {% set mid_h_red = 0 %} {% set mid_h_green
                  = 255 %} {% set mid_h_blue = 0 %} {% set mid_l_value = 19 %}
                  {% set mid_l_red = 0 %} {% set mid_l_green = 255 %} {% set
                  mid_l_blue = 0 %} {% set low_value = 17 %} {% set low_red = 0
                  %} {% set low_green = 0 %} {% set low_blue = 255 %} {% if curr
                  > mid_h_value %}
                    {% set curr_point = (curr - mid_h_value) / (high_value - mid_h_value) %}
                    {% set red = (curr_point * (high_red - mid_h_red) + mid_h_red) %}
                    {% set green = (curr_point * (high_green - mid_h_green) + mid_h_green) %}
                    {% set blue = (curr_point * (high_blue - mid_h_blue) + mid_h_blue) %}
                  {% elif curr > mid_l_value %}
                    {% set curr_point = (curr - mid_h_value) / (mid_h_value - mid_l_value) %}
                    {% set red = (curr_point * (mid_h_red - mid_l_red) + mid_l_red) %}
                    {% set green = (curr_point * (mid_h_green - mid_l_green) + mid_l_green) %}
                    {% set blue = (curr_point * (mid_h_blue - mid_l_blue) + mid_l_blue) %}
                  {% else %}
                    {% set curr_point = (mid_l_value - curr) / (mid_l_value - low_value) %}
                    {% set red = mid_l_red - (curr_point * (mid_l_red - low_red)) %}
                    {% set green = mid_l_green - (curr_point * (mid_l_green - low_green)) %}
                    {% set blue = mid_l_blue - (curr_point * (mid_l_blue - low_blue)) %}
                  {% endif %} {% set red = min(255, max(0, red | round(0) )) %}
                  {% set green = min(255, max(0, green | round(0) )) %} {% set
                  blue = min(255, max(0, blue | round(0) )) %} {{ '#' + '%02x' |
                  format( red | int ) + '%02x' | format( green | int ) + '%02x'
                  | format( blue | int ) }}
                layout: vertical
                fill_container: true
                multiline_secondary: true
                tap_action:
                  confirmation: true
                  action: call-service
                  service: script.climate_toggle
                  data:
                    climate: climate.guest_room_thermostat
              - type: custom:mushroom-template-card
                primary: '{{ states(entity) | float(-99) | round(1) }} %'
                secondary: ''
                icon: mdi:water-percent
                icon_color: >-
                  {% set humidity = states(entity) | float(-99) %} {% if
                  humidity > 43 %}
                    blue
                  {% elif humidity > 37 %}
                    green
                  {% else %}
                    red
                  {% endif %}
                entity: sensor.guest_room_thermostat_humidity
                layout: vertical
                fill_container: true
                tap_action:
                  action: more-info
                hold_action:
                  action: more-info
              - type: custom:mushroom-light-card
                entity: light.guest_room_closet_lights
                name: Closet - Lights
                layout: vertical
                fill_container: true
                secondary_info: state
                use_light_color: false
                show_brightness_control: true
                collapsible_controls: true
              - type: custom:mushroom-template-card
                entity: switch.guest_room_closet_outlets
                primary: Closet - Outlets
                secondary: |-
                  {% if is_state(entity, 'on') %}
                    {{ states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity) | capitalize }}
                  {% endif %}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                    {% set curr = states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) %}
                    {% set high_value = 100 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 25 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 10 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                icon: mdi:power-socket-de
                layout: vertical
                fill_container: true
                tap_action:
                  action: toggle
                  confirmation: true
                hold_action:
                  action: more-info
      - type: custom:vertical-stack-in-card
        mode: vertical
        cards:
          - type: custom:room-card
            title: Guest bathroom
            entity: light.guest_bathroom_all_lights
            info_entities:
              - entity: binary_sensor.guest_bathroom_motion_occupancy
                show_icon: true
                icon:
                  conditions:
                    - icon: mdi:motion-sensor
                      condition: equals
                      attribute: state
                      value: 'on'
                      styles:
                        color: red
                hide_if:
                  conditions:
                    - condition: equals
                      value: 'off'
              - entity: binary_sensor.guest_bathroom_door
                show_icon: true
                icon:
                  conditions:
                    - icon: mdi:door-open
                      condition: equals
                      attribute: state
                      value: 'on'
                      styles:
                        color: red
                hide_if:
                  conditions:
                    - condition: equals
                      value: 'off'
              - entity: sensor.guest_bathroom_total_power
            show_icon: true
            tap_action:
              action: toggle
            double_tap_action:
              action: more-info
          - type: grid
            square: false
            cards:
              - type: custom:mushroom-light-card
                entity: light.guest_bathroom_ceiling_light
                name: Ceiling lights
                layout: vertical
                fill_container: true
                secondary_info: state
                use_light_color: false
                show_brightness_control: true
                collapsible_controls: true
              - type: custom:mushroom-light-card
                entity: light.guest_bathroom_mirror_lights
                name: Mirror's lights
                layout: vertical
                fill_container: true
                secondary_info: state
                use_light_color: false
                show_brightness_control: false
                collapsible_controls: true
              - type: custom:mushroom-template-card
                primary: Mirror's outlets
                entity: switch.guest_bathroom_mirror_outlets
                secondary: |-
                  {% if is_state(entity, 'on') %}
                    {{ states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity) | capitalize }}
                  {% endif %}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                    {% set curr = states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) %}
                    {% set high_value = 100 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 25 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 10 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                icon: mdi:power-socket-de
                layout: vertical
                fill_container: true
                tap_action:
                  action: toggle
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                primary: Towel warmer
                secondary: >-
                  {% if (states('sensor.guest_bathroom_towel_warmer_power') |
                  float(-99)) > 0 %}
                    {{ states('sensor.guest_bathroom_towel_warmer_power') | float(-99) | round(1) }}W
                  {% endif %}
                icon: >-
                  {{ iif((states('sensor.guest_bathroom_towel_warmer_power') |
                  float(-99)) >5 , 'mdi:radiator', 'mdi:radiator-disabled') }}
                entity: switch.guest_bathroom_towel_warmer
                fill_container: true
                layout: vertical
                multiline_secondary: true
                icon_color: >-
                  {{ iif((states('sensor.guest_bathroom_towel_warmer_power') |
                  float(-99)) >5 , 'red', '') }}
                tap_action:
                  action: more-info
                hold_action:
                  action: more-info
                double_tap_action:
                  action: none
      - type: custom:vertical-stack-in-card
        cards:
          - type: custom:room-card
            title: Hall
            entity: light.hall_all_lights
            info_entities:
              - entity: binary_sensor.hall_front_door
                show_icon: true
                icon:
                  conditions:
                    - icon: mdi:door-open
                      condition: equals
                      attribute: state
                      value: 'on'
                      styles:
                        color: red
                hide_if:
                  conditions:
                    - condition: equals
                      value: 'off'
              - entity: sensor.hall_total_power
            show_icon: true
            tap_action:
              action: toggle
            double_tap_action:
              action: more-info
          - type: grid
            square: false
            cards:
              - type: custom:mushroom-light-card
                entity: light.hall_ceiling_light
                name: Lights
                layout: vertical
                fill_container: true
                secondary_info: state
                use_light_color: false
                show_brightness_control: true
                collapsible_controls: true
              - type: custom:mushroom-template-card
                entity: switch.hall_outlets
                primary: Outlets
                secondary: |-
                  {% if is_state(entity, 'on') %}
                    {{ states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity) | capitalize }}
                  {% endif %}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                    {% set curr = states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) %}
                    {% set high_value = 100 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 25 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 10 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                icon: mdi:power-socket-de
                layout: vertical
                fill_container: true
                tap_action:
                  action: toggle
                  confirmation: true
                hold_action:
                  action: more-info
      - type: custom:vertical-stack-in-card
        cards:
          - type: custom:room-card
            title: Kitchen
            entity: light.kitchen_all_lights
            info_entities:
              - entity: binary_sensor.kitchen_motion_all
                show_icon: true
                icon:
                  conditions:
                    - icon: mdi:motion-sensor
                      condition: equals
                      attribute: state
                      value: 'on'
                      styles:
                        color: red
                hide_if:
                  conditions:
                    - condition: equals
                      value: 'off'
              - entity: binary_sensor.kitchen_windows
                show_icon: true
                icon:
                  conditions:
                    - icon: mdi:window-open
                      condition: equals
                      attribute: state
                      value: 'on'
                      styles:
                        color: red
                hide_if:
                  conditions:
                    - condition: equals
                      value: 'off'
              - entity: sensor.kitchen_total_power
            show_icon: true
            tap_action:
              action: toggle
            double_tap_action:
              action: more-info
          - type: grid
            square: false
            cards:
              - type: custom:mushroom-light-card
                entity: light.kitchen_bench_lights
                name: Bench lights
                layout: vertical
                fill_container: true
                secondary_info: state
                use_light_color: false
                show_brightness_control: true
                collapsible_controls: true
              - type: custom:mushroom-light-card
                entity: light.kitchen_table_lights
                name: Table lights
                layout: vertical
                fill_container: true
                secondary_info: state
                use_light_color: false
                show_brightness_control: true
                collapsible_controls: true
              - type: custom:mushroom-template-card
                primary: Dishwasher outlets
                entity: switch.kitchen_dishwasher_outlet
                secondary: |-
                  {% if is_state(entity, 'on') %}
                    {{ states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity) | capitalize }}
                  {% endif %}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                    {% set curr = states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) %}
                    {% set high_value = 100 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 25 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 10 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                icon: mdi:power-socket-de
                layout: vertical
                fill_container: true
                tap_action:
                  action: toggle
                  confirmation:
                    text: Are you sure you want to toggle a wall power socket?
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                entity: sensor.kitchen_dishwasher_operation_state
                primary: Dishwasher
                secondary: >-
                  {{ states(entity) }}

                  {% if is_state(entity, 'Run') %} {{
                  states('sensor.kitchen_dishwasher_outlet_power') }}W

                  {% endif %}
                icon: mdi:dishwasher
                icon_color: |-
                  {% if is_state('switch.kitchen_dishwasher_outlet', 'off') %}
                    off
                  {% else %}
                    {% if is_state(entity, 'Finished') %}
                      blue
                    {% elif states(entity) in ['Idle', 'Innactive'] %}
                      green
                    {% elif is_state(entity, 'Run') %}
                      red
                    {% else %}
                      yellow
                    {% endif %}
                  {% endif %}
                fill_container: true
                layout: vertical
                multiline_secondary: true
                tap_action:
                  action: more-info
                hold_action:
                  action: more-info
                double_tap_action:
                  action: none
              - type: custom:mushroom-template-card
                entity: climate.kitchen_thermostat
                primary: >-
                  {{ state_attr(entity, 'current_temperature') | float(-99) |
                  round(1) }}Â°C
                secondary: '{{ states(entity) | capitalize }}'
                icon: mdi:thermometer
                icon_color: >-
                  {% set curr = state_attr(entity, 'current_temperature') |
                  float(-99) %} {% set high_value = 24 %} {% set high_red = 255
                  %} {% set high_green = 0 %} {% set high_blue = 0 %} {% set
                  mid_h_value = 22 %} {% set mid_h_red = 0 %} {% set mid_h_green
                  = 255 %} {% set mid_h_blue = 0 %} {% set mid_l_value = 19 %}
                  {% set mid_l_red = 0 %} {% set mid_l_green = 255 %} {% set
                  mid_l_blue = 0 %} {% set low_value = 17 %} {% set low_red = 0
                  %} {% set low_green = 0 %} {% set low_blue = 255 %} {% if curr
                  > mid_h_value %}
                    {% set curr_point = (curr - mid_h_value) / (high_value - mid_h_value) %}
                    {% set red = (curr_point * (high_red - mid_h_red) + mid_h_red) %}
                    {% set green = (curr_point * (high_green - mid_h_green) + mid_h_green) %}
                    {% set blue = (curr_point * (high_blue - mid_h_blue) + mid_h_blue) %}
                  {% elif curr > mid_l_value %}
                    {% set curr_point = (curr - mid_h_value) / (mid_h_value - mid_l_value) %}
                    {% set red = (curr_point * (mid_h_red - mid_l_red) + mid_l_red) %}
                    {% set green = (curr_point * (mid_h_green - mid_l_green) + mid_l_green) %}
                    {% set blue = (curr_point * (mid_h_blue - mid_l_blue) + mid_l_blue) %}
                  {% else %}
                    {% set curr_point = (mid_l_value - curr) / (mid_l_value - low_value) %}
                    {% set red = mid_l_red - (curr_point * (mid_l_red - low_red)) %}
                    {% set green = mid_l_green - (curr_point * (mid_l_green - low_green)) %}
                    {% set blue = mid_l_blue - (curr_point * (mid_l_blue - low_blue)) %}
                  {% endif %} {% set red = min(255, max(0, red | round(0) )) %}
                  {% set green = min(255, max(0, green | round(0) )) %} {% set
                  blue = min(255, max(0, blue | round(0) )) %} {{ '#' + '%02x' |
                  format( red | int ) + '%02x' | format( green | int ) + '%02x'
                  | format( blue | int ) }}
                layout: vertical
                fill_container: true
                multiline_secondary: true
                tap_action:
                  confirmation: true
                  action: call-service
                  service: script.climate_toggle
                  data:
                    climate: climate.kitchen_thermostat
              - type: custom:mushroom-template-card
                entity: sensor.kitchen_thermostat_humidity
                primary: '{{ states(entity) | float(-99) | round(1) }} %'
                secondary: ''
                icon: mdi:water-percent
                icon_color: >-
                  {% set curr = states(entity) | float(-99) %} {% set high_value
                  = 43 %} {% set high_red = 0 %} {% set high_green = 0 %} {% set
                  high_blue = 255 %} {% set mid_value = 40 %} {% set mid_red = 0
                  %} {% set mid_green = 255 %} {% set mid_blue = 0 %} {% set
                  low_value = 37 %} {% set low_red = 255 %} {% set low_green = 0
                  %} {% set low_blue = 0 %} {% if curr > mid_value %}
                    {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                    {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                    {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                    {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                  {% else %}
                    {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                    {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                    {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                    {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                  {% endif %} {% set red = min(255, max(0, red | round(0) )) %}
                  {% set green = min(255, max(0, green | round(0) )) %} {% set
                  blue = min(255, max(0, blue | round(0) )) %} {{ '#' + '%02x' |
                  format( red | int ) + '%02x' | format( green | int ) + '%02x'
                  | format( blue | int ) }}
                layout: vertical
                fill_container: true
                tap_action:
                  action: more-info
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                entity: sensor.kitchen_freezer_hygrometer_temperature
                primary: Freezer
                secondary: >-
                  {{ iif(is_state('switch.kitchen_refrigeration_freezer_outlet',
                  'on'), '',
                  states('switch.kitchen_refrigeration_freezer_outlet') |
                  capitalize) }} {% if is_number(states(entity)) %}
                    {{ states(entity) | float(-99) | round(1) }}Â°C
                  {% else %}
                    {{ states(entity) | capitalize }}
                  {% endif %}
                  {{states('sensor.kitchen_refrigeration_freezer_outlet_power')
                  }}W
                icon: mdi:fridge
                icon_color: >-
                  {% if is_state('switch.kitchen_refrigeration_freezer_outlet',
                  'on') %}
                    {% if is_number(states(entity)) %}
                      {% set curr = states(entity) | float(-99) %}
                      {% set high_value = -14 %}
                      {% set high_red = 255 %}
                      {% set high_green = 0 %}
                      {% set high_blue = 0 %}
                      {% set mid_value = -16 %}
                      {% set mid_red = 0 %}
                      {% set mid_green = 255 %}
                      {% set mid_blue = 0 %}
                      {% set low_value = -18 %}
                      {% set low_red = 0 %}
                      {% set low_green = 0 %}
                      {% set low_blue = 255 %}
                      {% if curr > mid_value %}
                        {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                        {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                        {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                        {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                      {% else %}
                        {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                        {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                        {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                        {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                      {% endif %}
                      {% set red = min(255, max(0, red | round(0) )) %}
                      {% set green = min(255, max(0, green | round(0) )) %}
                      {% set blue = min(255, max(0, blue | round(0) )) %}
                      {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                    {% endif %}
                  {% else %}
                    red
                  {% endif %}
                fill_container: true
                layout: vertical
                multiline_secondary: true
                tap_action:
                  action: more-info
                hold_action:
                  action: more-info
                double_tap_action:
                  action: none
              - type: custom:mushroom-template-card
                entity: sensor.kitchen_fridge_hygrometer_temperature
                primary: Refrigerator
                secondary: >-
                  {{ iif(is_state('switch.kitchen_refrigeration_fridge_outlet',
                  'on'), '',
                  states('switch.kitchen_refrigeration_fridge_outlet') |
                  capitalize) }} {% if is_number(states(entity)) %}
                    {{ states(entity) | float(-99) | round(1) }}Â°C
                  {% else %}
                    {{ states(entity) | capitalize }}
                  {% endif %}
                  {{states('sensor.kitchen_refrigeration_fridge_outlet_power')
                  }}W
                icon: mdi:fridge
                icon_color: >-
                  {% if is_state('switch.kitchen_refrigeration_fridge_outlet',
                  'on') %}
                    {% if is_number(states(entity)) %}
                      {% set curr = states(entity) | float(-99) %}
                      {% set high_value = 8 %}
                      {% set high_red = 255 %}
                      {% set high_green = 0 %}
                      {% set high_blue = 0 %}
                      {% set mid_value = 5 %}
                      {% set mid_red = 0 %}
                      {% set mid_green = 255 %}
                      {% set mid_blue = 0 %}
                      {% set low_value = 3 %}
                      {% set low_red = 0 %}
                      {% set low_green = 0 %}
                      {% set low_blue = 255 %}
                      {% if curr > mid_value %}
                        {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                        {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                        {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                        {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                      {% else %}
                        {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                        {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                        {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                        {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                      {% endif %}
                      {% set red = min(255, max(0, red | round(0) )) %}
                      {% set green = min(255, max(0, green | round(0) )) %}
                      {% set blue = min(255, max(0, blue | round(0) )) %}
                      {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                    {% endif %}
                  {% else %}
                    red
                  {% endif %}
                fill_container: true
                layout: vertical
                multiline_secondary: true
                tap_action:
                  action: more-info
                hold_action:
                  action: more-info
                double_tap_action:
                  action: none
              - type: custom:mushroom-template-card
                primary: Microwave
                entity: sensor.kitchen_microwave_power
                icon: mdi:microwave
                secondary: >-
                  {% if is_state((entity | replace('sensor.', 'switch.') |
                  replace('_power','')), 'on') %}
                    {{ states(entity) | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity | replace('sensor.', 'switch.') | replace('_power','')) | capitalize }}
                  {% endif %}
                icon_color: >-
                  {% if is_state(entity | replace('sensor.', 'switch.') |
                  replace('_power',''), 'on') %}
                    {% set curr = states(entity) | float(-99) %}
                    {% set high_value = 2000 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 10 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 0 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                layout: vertical
                fill_container: true
                tap_action:
                  action: more-info
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                primary: Oven
                entity: sensor.kitchen_oven_power
                icon: mdi:toaster-oven
                secondary: >-
                  {% if is_state((entity | replace('sensor.', 'switch.') |
                  replace('_power','')), 'on') %}
                    {{ states(entity) | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity | replace('sensor.', 'switch.') | replace('_power','')) | capitalize }}
                  {% endif %}
                icon_color: >-
                  {% if is_state(entity | replace('sensor.', 'switch.') |
                  replace('_power',''), 'on') %}
                    {% set curr = states(entity) | float(-99) %}
                    {% set high_value = 2000 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 10 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 0 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                layout: vertical
                fill_container: true
                tap_action:
                  action: more-info
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                primary: Cook hood
                entity: sensor.kitchen_cooker_hood_power
                icon: mdi:fan
                secondary: >-
                  {% if is_state((entity | replace('sensor.', 'switch.') |
                  replace('_power','')), 'on') %}
                    {{ states(entity) | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity | replace('sensor.', 'switch.') | replace('_power','')) | capitalize }}
                  {% endif %}
                icon_color: >-
                  {% if is_state(entity | replace('sensor.', 'switch.') |
                  replace('_power',''), 'on') %}
                    {% set curr = states(entity) | float(-99) %}
                    {% set high_value = 200 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 10 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 0 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                layout: vertical
                fill_container: true
                tap_action:
                  action: more-info
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                primary: Cooktop
                entity: sensor.kitchen_cooktop_total_power
                icon: mdi:stove
                secondary: >-
                  {% if is_state((entity | replace('sensor.', 'switch.') |
                  replace('_power','')), 'on') %}
                    {{ states(entity) | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity | replace('sensor.', 'switch.') | replace('_power','')) | capitalize }}
                  {% endif %}
                icon_color: >-
                  {% if is_state(entity | replace('sensor.', 'switch.') |
                  replace('_power',''), 'on') %}
                    {% set curr = states(entity) | float(-99) %}
                    {% set high_value = 2000 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 1000 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 0 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                layout: vertical
                fill_container: true
                tap_action:
                  action: more-info
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                primary: Bench outlets 1
                entity: switch.kitchen_bench_outlets_1_outlets
                secondary: |-
                  {% if is_state(entity, 'on') %}
                    {{ states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity) | capitalize }}
                  {% endif %}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                    {% set curr = states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) %}
                    {% set high_value = 100 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 25 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 10 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                icon: mdi:power-socket-de
                layout: vertical
                fill_container: true
                tap_action:
                  action: toggle
                  confirmation:
                    text: Are you sure you want to toggle a wall power socket?
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                primary: Bench outlets 2
                entity: switch.kitchen_bench_outlets_2
                secondary: |-
                  {% if is_state(entity, 'on') %}
                    {{ states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity) | capitalize }}
                  {% endif %}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                    {% set curr = states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) %}
                    {% set high_value = 100 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 25 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 10 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                icon: mdi:power-socket-de
                layout: vertical
                fill_container: true
                tap_action:
                  action: toggle
                  confirmation:
                    text: Are you sure you want to toggle a wall power socket?
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                primary: Bench outlets 3
                entity: switch.kitchen_bench_outlets_3
                secondary: |-
                  {% if is_state(entity, 'on') %}
                    {{ states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity) | capitalize }}
                  {% endif %}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                    {% set curr = states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) %}
                    {% set high_value = 100 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 25 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 10 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                icon: mdi:power-socket-de
                layout: vertical
                fill_container: true
                tap_action:
                  action: toggle
                  confirmation:
                    text: Are you sure you want to toggle a wall power socket?
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                primary: Bench USB
                entity: switch.kitchen_bench_outlets_1_usb
                secondary: |-
                  {% if is_state(entity, 'on') %}
                    {{ states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity) | capitalize }}
                  {% endif %}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                    {% set curr = states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) %}
                    {% set high_value = 2.5 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 1.5 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 0.5 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                icon: mdi:usb
                layout: vertical
                fill_container: true
                tap_action:
                  action: toggle
                  confirmation:
                    text: Are you sure you want to toggle a USB power socket?
                hold_action:
                  action: more-info
      - type: custom:vertical-stack-in-card
        mode: vertical
        cards:
          - type: custom:room-card
            title: Laundry
            entity: light.bathroom_ceiling_lights
            info_entities:
              - entity: binary_sensor.bathroom_motion_dual_sensors_state
                show_icon: true
                icon:
                  conditions:
                    - icon: mdi:motion-sensor
                      condition: equals
                      attribute: state
                      value: 'on'
                      styles:
                        color: red
                hide_if:
                  conditions:
                    - condition: equals
                      value: 'off'
              - entity: binary_sensor.bathroom_door
                show_icon: true
                icon:
                  conditions:
                    - icon: mdi:door
                      condition: equals
                      attribute: state
                      value: 'off'
                      styles:
                        color: red
                hide_if:
                  conditions:
                    - condition: equals
                      value: 'on'
              - entity: sensor.laundry_total_power
            show_icon: true
            tap_action:
              action: toggle
            double_tap_action:
              action: more-info
          - type: grid
            cards:
              - type: custom:mushroom-light-card
                entity: light.bathroom_ceiling_lights
                name: Lights
                layout: vertical
                fill_container: true
                secondary_info: state
                use_light_color: false
                show_brightness_control: true
                collapsible_controls: true
              - type: custom:mushroom-template-card
                primary: Outlets
                entity: switch.laundry_bench_outlets
                secondary: |-
                  {% if is_state(entity, 'on') %}
                    {{ states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity) | capitalize }}
                  {% endif %}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                    {% set curr = states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) %}
                    {% set high_value = 100 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 25 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 10 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                icon: mdi:power-socket-de
                layout: vertical
                fill_container: true
                tap_action:
                  action: toggle
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                primary: Washing machine
                secondary: >-
                  {{ states('sensor.laundry_washing_machine_status') |
                  capitalize }}

                  {% if states('sensor.laundry_washing_machine_power') |
                  float(0) > 0 %} {{
                  states('sensor.laundry_washing_machine_power') | float(0) |
                  round(1) }}W

                  {% endif %}
                icon: mdi:washing-machine
                icon_color: >-
                  {% if is_state('switch.laundry_washing_machine_outlet', 'off')
                  %}
                    off
                  {% else %}
                    {% if is_state('sensor.laundry_washing_machine_status', 'Idle') %}
                      blue
                    {% else %}
                      red
                    {% endif %}
                  {% endif %}
                entity: sensor.laundry_washing_machine_status
                fill_container: true
                layout: vertical
                multiline_secondary: true
                tap_action:
                  confirmation:
                    text: >-
                      Are you sure you want to toggle the appliance's power
                      supply? Please make sure the appliance is not running.
                  action: call-service
                  service: switch.toggle
                  target:
                    entity_id: switch.laundry_washing_machine_outlet
                hold_action:
                  action: more-info
                double_tap_action:
                  action: none
              - type: custom:mushroom-template-card
                primary: Dryer
                secondary: >-
                  {{ states('sensor.laundry_dryer_status') | capitalize }}

                  {% if states('sensor.laundry_dryer_outlet_power') | float(0) >
                  0%} {{
                    states('sensor.laundry_dryer_outlet_power') | float(0) | round(1) }}W
                  {% endif %}
                icon: mdi:tumble-dryer
                icon_color: |-
                  {% if is_state('switch.laundry_dryer_outlet', 'off') %}
                    off
                  {% else %}
                    {% if is_state('sensor.laundry_dryer_status', 'Idle') %}
                      blue
                    {% else %}
                      red
                    {% endif %}
                  {% endif %}
                entity: sensor.laundry_dryer_status
                fill_container: true
                layout: vertical
                multiline_secondary: true
                tap_action:
                  confirmation:
                    text: >-
                      Are you sure you want to toggle the appliance's power
                      supply? Please make sure the appliance is not running.
                  action: call-service
                  service: switch.toggle
                  target:
                    entity_id: switch.laundry_dryer_outlet
                hold_action:
                  action: more-info
                double_tap_action:
                  action: none
              - type: custom:mushroom-template-card
                entity: climate.bathroom_thermostat
                primary: >-
                  {{ state_attr(entity, 'current_temperature') | float(-99) |
                  round(1) }}Â°C
                secondary: '{{ states(entity) | capitalize }}'
                icon: mdi:thermometer
                icon_color: >-
                  {% set curr = state_attr(entity, 'current_temperature') |
                  float(-99) %} {% set high_value = 24 %} {% set high_red = 255
                  %} {% set high_green = 0 %} {% set high_blue = 0 %} {% set
                  mid_h_value = 22 %} {% set mid_h_red = 0 %} {% set mid_h_green
                  = 255 %} {% set mid_h_blue = 0 %} {% set mid_l_value = 19 %}
                  {% set mid_l_red = 0 %} {% set mid_l_green = 255 %} {% set
                  mid_l_blue = 0 %} {% set low_value = 17 %} {% set low_red = 0
                  %} {% set low_green = 0 %} {% set low_blue = 255 %} {% if curr
                  > mid_h_value %}
                    {% set curr_point = (curr - mid_h_value) / (high_value - mid_h_value) %}
                    {% set red = (curr_point * (high_red - mid_h_red) + mid_h_red) %}
                    {% set green = (curr_point * (high_green - mid_h_green) + mid_h_green) %}
                    {% set blue = (curr_point * (high_blue - mid_h_blue) + mid_h_blue) %}
                  {% elif curr > mid_l_value %}
                    {% set curr_point = (curr - mid_h_value) / (mid_h_value - mid_l_value) %}
                    {% set red = (curr_point * (mid_h_red - mid_l_red) + mid_l_red) %}
                    {% set green = (curr_point * (mid_h_green - mid_l_green) + mid_l_green) %}
                    {% set blue = (curr_point * (mid_h_blue - mid_l_blue) + mid_l_blue) %}
                  {% else %}
                    {% set curr_point = (mid_l_value - curr) / (mid_l_value - low_value) %}
                    {% set red = mid_l_red - (curr_point * (mid_l_red - low_red)) %}
                    {% set green = mid_l_green - (curr_point * (mid_l_green - low_green)) %}
                    {% set blue = mid_l_blue - (curr_point * (mid_l_blue - low_blue)) %}
                  {% endif %} {% set red = min(255, max(0, red | round(0) )) %}
                  {% set green = min(255, max(0, green | round(0) )) %} {% set
                  blue = min(255, max(0, blue | round(0) )) %} {{ '#' + '%02x' |
                  format( red | int ) + '%02x' | format( green | int ) + '%02x'
                  | format( blue | int ) }}
                layout: vertical
                fill_container: true
                multiline_secondary: true
                tap_action:
                  confirmation: true
                  action: call-service
                  service: script.climate_toggle
                  data:
                    climate: climate.bathroom_thermostat
              - type: custom:mushroom-template-card
                primary: '{{ states(entity) | float(-99) | round(1) }} %'
                secondary: ''
                icon: mdi:water-percent
                icon_color: >-
                  {% set humidity = states(entity) | float(-99) %} {% if
                  humidity > 43 %}
                    blue
                  {% elif humidity > 37 %}
                    green
                  {% else %}
                    red
                  {% endif %}
                entity: sensor.bathroom_thermostat_humidity
                layout: vertical
                fill_container: true
                tap_action:
                  action: more-info
                hold_action:
                  action: more-info
      - type: custom:vertical-stack-in-card
        cards:
          - type: custom:room-card
            title: Living room
            entity: light.living_room_all_lights
            info_entities:
              - entity: binary_sensor.living_room_windows_left
                show_icon: true
                icon:
                  conditions:
                    - icon: mdi:window-open
                      condition: equals
                      attribute: state
                      value: 'on'
                      styles:
                        color: red
                hide_if:
                  conditions:
                    - condition: equals
                      value: 'off'
              - entity: binary_sensor.living_room_windows_right
                show_icon: true
                icon:
                  conditions:
                    - icon: mdi:window-open
                      condition: equals
                      attribute: state
                      value: 'on'
                      styles:
                        color: red
                hide_if:
                  conditions:
                    - condition: equals
                      value: 'off'
              - entity: sensor.living_room_total_power
            show_icon: true
            tap_action:
              action: toggle
            double_tap_action:
              action: more-info
          - type: conditional
            conditions:
              - entity: media_player.living_room_tv_sony_dlna
                state_not: 'off'
              - entity: media_player.living_room_tv_sony_dlna
                state_not: unavailable
            card:
              type: custom:mushroom-media-player-card
              layout: vertical
              entity: media_player.living_room_tv_sony_dlna
              name: TV Sony
              icon: mdi:television
              fill_container: true
              show_volume_level: false
              use_media_info: false
              collapsible_controls: true
              media_controls: []
              secondary_info: none
              tap_action:
                action: call-service
                service: input_button.press
                data: {}
                target:
                  entity_id: input_button.living_room_tv_sony_toggle
          - type: conditional
            conditions:
              - entity: media_player.living_room_tv_sony_dlna
                state_not: 'off'
              - entity: media_player.living_room_tv_sony_dlna
                state_not: unavailable
            card:
              type: custom:mini-media-player
              entity: media_player.living_room_tv_sony_dlna
              sound_mode: icon
              toggle_power: false
              volume_step: '1'
              min_volume: '0'
              info: scroll
              max_volume: '50'
              hide:
                power: true
                name: true
                icon: true
                play_pause: true
                volume_level: false
          - type: grid
            square: false
            cards:
              - type: conditional
                conditions:
                  - entity: media_player.living_room_tv_sony_dlna
                    state: 'off'
                card:
                  type: custom:mushroom-media-player-card
                  layout: vertical
                  entity: media_player.living_room_tv_sony_dlna
                  name: TV Sony
                  icon: mdi:television
                  fill_container: true
                  show_volume_level: false
                  use_media_info: false
                  volume_controls:
                    - volume_set
                  collapsible_controls: true
                  media_controls: []
                  secondary_info: none
                  tap_action:
                    action: call-service
                    service: input_button.press
                  data: {}
                  target:
                    entity_id: input_button.living_room_tv_sony_toggle
              - type: conditional
                conditions:
                  - entity: media_player.living_room_tv_sony_dlna
                    state: unavailable
                card:
                  type: custom:mushroom-media-player-card
                  layout: vertical
                  entity: media_player.living_room_tv_sony_dlna
                  name: TV Sony
                  icon: mdi:television
                  fill_container: true
                  show_volume_level: false
                  use_media_info: false
                  volume_controls:
                    - volume_set
                  collapsible_controls: true
                  media_controls: []
                  secondary_info: none
                  tap_action:
                    action: call-service
                    service: input_button.press
                  data: {}
                  target:
                    entity_id: input_button.living_room_tv_sony_toggle
              - type: custom:mushroom-template-card
                primary: TV rack
                entity: switch.living_room_tv_rack_outlets
                secondary: |-
                  {% if is_state(entity, 'on') %}
                    {{ states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity) | capitalize }}
                  {% endif %}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                    {% set curr = states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) %}
                    {% set high_value = 100 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 25 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 10 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                icon: mdi:power-socket-de
                layout: vertical
                fill_container: true
                tap_action:
                  action: toggle
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                primary: Map wall
                entity: switch.living_room_map_wall_outlets
                secondary: |-
                  {% if is_state(entity, 'on') %}
                    {{ states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity) | capitalize }}
                  {% endif %}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                    {% set curr = states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) %}
                    {% set high_value = 100 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 25 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 10 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                icon: mdi:power-socket-de
                layout: vertical
                fill_container: true
                tap_action:
                  action: toggle
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                primary: Windows wall
                entity: switch.living_room_windows_wall_outlets
                secondary: |-
                  {% if is_state(entity, 'on') %}
                    {{ states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity) | capitalize }}
                  {% endif %}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                    {% set curr = states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) %}
                    {% set high_value = 100 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 25 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 10 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                icon: mdi:power-socket-de
                layout: vertical
                fill_container: true
                tap_action:
                  action: toggle
                hold_action:
                  action: more-info
              - type: custom:mushroom-vacuum-card
                entity: vacuum.hall_roomba
                name: Roomba
                fill_container: true
                layout: vertical
                commands: []
              - type: custom:mushroom-cover-card
                entity: cover.living_room_blinds
                layout: vertical
                fill_container: true
                show_buttons_control: false
                show_position_control: false
                name: Covers
              - type: custom:mushroom-template-card
                entity: climate.living_room_thermostat
                primary: >-
                  {{ state_attr(entity, 'current_temperature') | float(-99) |
                  round(1) }}Â°C
                secondary: '{{ states(entity) | capitalize }}'
                icon: mdi:thermometer
                icon_color: >-
                  {% set curr = state_attr(entity, 'current_temperature') |
                  float(-99) %} {% set high_value = 24 %} {% set high_red = 255
                  %} {% set high_green = 0 %} {% set high_blue = 0 %} {% set
                  mid_h_value = 22 %} {% set mid_h_red = 0 %} {% set mid_h_green
                  = 255 %} {% set mid_h_blue = 0 %} {% set mid_l_value = 19 %}
                  {% set mid_l_red = 0 %} {% set mid_l_green = 255 %} {% set
                  mid_l_blue = 0 %} {% set low_value = 17 %} {% set low_red = 0
                  %} {% set low_green = 0 %} {% set low_blue = 255 %} {% if curr
                  > mid_h_value %}
                    {% set curr_point = (curr - mid_h_value) / (high_value - mid_h_value) %}
                    {% set red = (curr_point * (high_red - mid_h_red) + mid_h_red) %}
                    {% set green = (curr_point * (high_green - mid_h_green) + mid_h_green) %}
                    {% set blue = (curr_point * (high_blue - mid_h_blue) + mid_h_blue) %}
                  {% elif curr > mid_l_value %}
                    {% set curr_point = (curr - mid_h_value) / (mid_h_value - mid_l_value) %}
                    {% set red = (curr_point * (mid_h_red - mid_l_red) + mid_l_red) %}
                    {% set green = (curr_point * (mid_h_green - mid_l_green) + mid_l_green) %}
                    {% set blue = (curr_point * (mid_h_blue - mid_l_blue) + mid_l_blue) %}
                  {% else %}
                    {% set curr_point = (mid_l_value - curr) / (mid_l_value - low_value) %}
                    {% set red = mid_l_red - (curr_point * (mid_l_red - low_red)) %}
                    {% set green = mid_l_green - (curr_point * (mid_l_green - low_green)) %}
                    {% set blue = mid_l_blue - (curr_point * (mid_l_blue - low_blue)) %}
                  {% endif %} {% set red = min(255, max(0, red | round(0) )) %}
                  {% set green = min(255, max(0, green | round(0) )) %} {% set
                  blue = min(255, max(0, blue | round(0) )) %} {{ '#' + '%02x' |
                  format( red | int ) + '%02x' | format( green | int ) + '%02x'
                  | format( blue | int ) }}
                layout: vertical
                fill_container: true
                multiline_secondary: true
                tap_action:
                  confirmation: true
                  action: call-service
                  service: script.climate_toggle
                  data:
                    climate: climate.living_room_thermostat
              - type: custom:mushroom-template-card
                primary: '{{ states(entity) | float(-99) | round(1) }} %'
                secondary: ''
                icon: mdi:water-percent
                icon_color: >-
                  {% set humidity = states(entity) | float(-99) %} {% if
                  humidity > 43 %}
                    blue
                  {% elif humidity > 37 %}
                    green
                  {% else %}
                    red
                  {% endif %}
                entity: sensor.living_room_thermostat_humidity
                layout: vertical
                fill_container: true
                tap_action:
                  action: more-info
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                primary: Camera
                secondary: '{{ states(''camera.living_room_camera'') | capitalize }}'
                icon: >-
                  {{ iif(is_state(entity, 'True'), 'mdi:cctv', 'mdi:cctv-off')
                  }}
                layout: vertical
                fill_container: true
                entity: binary_sensor.living_room_camera_streaming_sensor
                icon_color: >-
                  {{ iif(is_state(entity, 'True'), 'red',
                  iif(is_state('switch.living_room_camera_enabled', 'on'),
                  'gold', '')) }}
                badge_icon: '{{ iif(is_state(entity, ''True''), ''mdi:wifi'', '''') }}'
                badge_color: red
                tap_action:
                  action: call-service
                  service: script.camera_toggle
                  data:
                    camera: camera.living_room_camera
                  target: {}
                hold_action:
                  action: more-info
      - type: custom:vertical-stack-in-card
        cards:
          - type: custom:room-card
            title: Office
            entity: light.office_all_lights
            info_entities:
              - entity: binary_sensor.office_motion_occupancy
                show_icon: true
                icon:
                  conditions:
                    - icon: mdi:motion-sensor
                      condition: equals
                      attribute: state
                      value: 'on'
                      styles:
                        color: red
                hide_if:
                  conditions:
                    - condition: equals
                      value: 'off'
              - entity: binary_sensor.office_door
                show_icon: true
                icon:
                  conditions:
                    - icon: mdi:door
                      condition: equals
                      attribute: state
                      value: 'off'
                      styles:
                        color: red
                hide_if:
                  conditions:
                    - condition: equals
                      value: 'on'
              - entity: sensor.office_total_power
            show_icon: true
            tap_action:
              action: toggle
            double_tap_action:
              action: more-info
          - type: grid
            square: false
            cards:
              - type: custom:mushroom-light-card
                entity: light.office_ceiling_lines
                name: Ceiling Lines
                layout: vertical
                fill_container: true
                secondary_info: state
                use_light_color: true
                show_brightness_control: true
                collapsible_controls: true
              - type: custom:mushroom-template-card
                primary: Door's outlets
                entity: switch.office_door_outlets
                secondary: |-
                  {% if is_state(entity, 'on') %}
                    {{ states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity) | capitalize }}
                  {% endif %}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                    {% set curr = states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) %}
                    {% set high_value = 100 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 25 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 10 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                icon: mdi:power-socket-de
                layout: vertical
                fill_container: true
                tap_action:
                  action: toggle
                  confirmation:
                    text: Are you sure you want to toggle a wall power socket?
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                primary: Windows outlets
                entity: switch.office_windows_outlets_outlets
                secondary: |-
                  {% if is_state(entity, 'on') %}
                    {{ states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) | round(1) }}W
                  {% else %}
                    {{ states(entity) | capitalize }}
                  {% endif %}
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                    {% set curr = states(entity | replace('switch.', 'sensor.') + '_power') | float(-99) %}
                    {% set high_value = 100 %}
                    {% set high_red = 255 %}
                    {% set high_green = 0 %}
                    {% set high_blue = 0 %}
                    {% set mid_value = 25 %}
                    {% set mid_red = 255 %}
                    {% set mid_green = 215 %}
                    {% set mid_blue = 0 %}
                    {% set low_value = 10 %}
                    {% set low_red = 0 %}
                    {% set low_green = 255 %}
                    {% set low_blue = 0 %}
                    {% if curr > mid_value %}
                      {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                      {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                      {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                      {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                    {% else %}
                      {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                      {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                      {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                      {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                    {% endif %}
                    {% set red = min(255, max(0, red | round(0) )) %}
                    {% set green = min(255, max(0, green | round(0) )) %}
                    {% set blue = min(255, max(0, blue | round(0) )) %}
                    {{ '#' + '%02x' | format( red | int ) + '%02x' | format( green | int ) + '%02x' | format( blue | int ) }}
                  {% endif %}
                icon: mdi:power-socket-de
                layout: vertical
                fill_container: true
                tap_action:
                  action: toggle
                  confirmation:
                    text: Are you sure you want to toggle a wall power socket?
                hold_action:
                  action: more-info
              - type: custom:mushroom-light-card
                entity: light.office_workstation_lights
                name: Workstation
                use_light_color: true
                layout: vertical
                fill_container: true
                secondary_info: state
                show_brightness_control: true
                collapsible_controls: true
              - type: custom:mushroom-template-card
                primary: Displays
                entity: switch.office_workstation_outlets_displays
                secondary: '{{ states(entity) | capitalize }}'
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                    blue
                  {% endif %}
                icon: mdi:monitor-multiple
                layout: vertical
                fill_container: true
                tap_action:
                  action: toggle
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                primary: Docking station
                entity: switch.office_workstation_outlets_docking_station
                secondary: '{{ states(entity) | capitalize }}'
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                    blue
                  {% endif %}
                icon: mdi:laptop
                layout: vertical
                fill_container: true
                tap_action:
                  action: toggle
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                primary: USB
                entity: switch.office_workstation_power_strip_usb
                secondary: '{{ states(entity) | capitalize }}'
                icon: mdi:usb
                icon_color: |-
                  {% if is_state(entity, 'on') %}
                    blue
                  {% endif %}
                layout: vertical
                fill_container: true
                tap_action:
                  action: toggle
                hold_action:
                  action: more-info
              - type: custom:mushroom-cover-card
                entity: cover.office_shutter_2_cover
                layout: vertical
                fill_container: true
                show_buttons_control: false
                show_position_control: false
                name: Shutter (School)
              - type: custom:mushroom-cover-card
                entity: cover.office_shutter_1_cover
                layout: vertical
                fill_container: true
                show_buttons_control: false
                show_position_control: false
                name: Shutter (Street)
              - type: custom:mushroom-template-card
                entity: climate.office_thermostat_1
                primary: >-
                  {{ state_attr(entity, 'current_temperature') | float(-99) |
                  round(1) }}Â°C
                secondary: '{{ states(entity) | capitalize }}'
                icon: mdi:thermometer
                icon_color: >-
                  {% set curr = state_attr(entity, 'current_temperature') |
                  float(-99) %} {% set high_value = 24 %} {% set high_red = 255
                  %} {% set high_green = 0 %} {% set high_blue = 0 %} {% set
                  mid_h_value = 22 %} {% set mid_h_red = 0 %} {% set mid_h_green
                  = 255 %} {% set mid_h_blue = 0 %} {% set mid_l_value = 19 %}
                  {% set mid_l_red = 0 %} {% set mid_l_green = 255 %} {% set
                  mid_l_blue = 0 %} {% set low_value = 17 %} {% set low_red = 0
                  %} {% set low_green = 0 %} {% set low_blue = 255 %} {% if curr
                  > mid_h_value %}
                    {% set curr_point = (curr - mid_h_value) / (high_value - mid_h_value) %}
                    {% set red = (curr_point * (high_red - mid_h_red) + mid_h_red) %}
                    {% set green = (curr_point * (high_green - mid_h_green) + mid_h_green) %}
                    {% set blue = (curr_point * (high_blue - mid_h_blue) + mid_h_blue) %}
                  {% elif curr > mid_l_value %}
                    {% set curr_point = (curr - mid_h_value) / (mid_h_value - mid_l_value) %}
                    {% set red = (curr_point * (mid_h_red - mid_l_red) + mid_l_red) %}
                    {% set green = (curr_point * (mid_h_green - mid_l_green) + mid_l_green) %}
                    {% set blue = (curr_point * (mid_h_blue - mid_l_blue) + mid_l_blue) %}
                  {% else %}
                    {% set curr_point = (mid_l_value - curr) / (mid_l_value - low_value) %}
                    {% set red = mid_l_red - (curr_point * (mid_l_red - low_red)) %}
                    {% set green = mid_l_green - (curr_point * (mid_l_green - low_green)) %}
                    {% set blue = mid_l_blue - (curr_point * (mid_l_blue - low_blue)) %}
                  {% endif %} {% set red = min(255, max(0, red | round(0) )) %}
                  {% set green = min(255, max(0, green | round(0) )) %} {% set
                  blue = min(255, max(0, blue | round(0) )) %} {{ '#' + '%02x' |
                  format( red | int ) + '%02x' | format( green | int ) + '%02x'
                  | format( blue | int ) }}
                layout: vertical
                fill_container: true
                multiline_secondary: true
                tap_action:
                  confirmation: true
                  action: call-service
                  service: script.climate_toggle
                  data:
                    climate: climate.office_thermostat_1
              - type: custom:mushroom-template-card
                entity: sensor.office_thermostat_1_current_humidity
                primary: '{{ states(entity) | float(-99) | round(1) }} %'
                secondary: ''
                icon: mdi:water-percent
                icon_color: >-
                  {% set curr = states(entity) | float(-99) %} {% set high_value
                  = 43 %} {% set high_red = 0 %} {% set high_green = 0 %} {% set
                  high_blue = 255 %} {% set mid_value = 40 %} {% set mid_red = 0
                  %} {% set mid_green = 255 %} {% set mid_blue = 0 %} {% set
                  low_value = 37 %} {% set low_red = 255 %} {% set low_green = 0
                  %} {% set low_blue = 0 %} {% if curr > mid_value %}
                    {% set curr_point = (curr - mid_value) / (high_value - mid_value) %}
                    {% set red = (curr_point * (high_red - mid_red) + mid_red) %}
                    {% set green = (curr_point * (high_green - mid_green) + mid_green) %}
                    {% set blue = (curr_point * (high_blue - mid_blue) + mid_blue) %}
                  {% else %}
                    {% set curr_point = (mid_value - curr) / (mid_value - low_value) %}
                    {% set red = mid_red - (curr_point * (mid_red - low_red)) %}
                    {% set green = mid_green - (curr_point * (mid_green - low_green)) %}
                    {% set blue = mid_blue - (curr_point * (mid_blue - low_blue)) %}
                  {% endif %} {% set red = min(255, max(0, red | round(0) )) %}
                  {% set green = min(255, max(0, green | round(0) )) %} {% set
                  blue = min(255, max(0, blue | round(0) )) %} {{ '#' + '%02x' |
                  format( red | int ) + '%02x' | format( green | int ) + '%02x'
                  | format( blue | int ) }}
                layout: vertical
                fill_container: true
                tap_action:
                  action: more-info
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                primary: Camera
                secondary: '{{ states(''camera.office_camera'') | capitalize }}'
                icon: >-
                  {{ iif(is_state(entity, 'True'), 'mdi:cctv', 'mdi:cctv-off')
                  }}
                layout: vertical
                fill_container: true
                entity: binary_sensor.office_camera_streaming_sensor
                icon_color: >-
                  {{ iif(is_state(entity, 'True'), 'red',
                  iif(is_state('switch.office_camera_enabled', 'on'), 'gold',
                  '')) }}
                badge_icon: '{{ iif(is_state(entity, ''True''), ''mdi:wifi'', '''') }}'
                badge_color: red
                tap_action:
                  action: call-service
                  service: script.camera_toggle
                  data:
                    camera: camera.office_camera
                  target: {}
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                primary: Camera (Dog's mat)
                secondary: '{{ states(''camera.dogs_mat_camera'') | capitalize }}'
                icon: >-
                  {{ iif(is_state(entity, 'True'), 'mdi:cctv', 'mdi:cctv-off')
                  }}
                layout: vertical
                fill_container: true
                entity: binary_sensor.dogs_mat_camera_streaming_sensor
                icon_color: >-
                  {{ iif(is_state(entity, 'True'), 'red',
                  iif(is_state('switch.dogs_mat_camera_enabled', 'on'), 'gold',
                  '')) }}
                badge_icon: '{{ iif(is_state(entity, ''True''), ''mdi:wifi'', '''') }}'
                badge_color: red
                tap_action:
                  action: call-service
                  service: script.camera_toggle
                  data:
                    camera: camera.dogs_mat_camera_camera
                  target: {}
                hold_action:
                  action: more-info
              - type: custom:mushroom-template-card
                primary: Printer
                secondary: '{{ states(entity) | capitalize }}'
                icon: >-
                  {{iif(is_state(entity, 'off'), 'mdi:printer-off',
                  'mdi:printer') }}
                icon_color: >-
                  {% if states(entity) not in ['unavailable','unknown','none'])
                  %}
                    {% if ((states('sensor.epson_wf_3720_series_black_ink') | float(0) | round(0)) < 10) or ((states('sensor.epson_wf_3720_series_cyan_ink') | float(0) | round(0)) < 10) or ((states('sensor.epson_wf_3720_series_magenta_ink') | float(0) | round(0)) < 10) or ((states('sensor.epson_wf_3720_series_yellow_ink') | float(0) | round(0)) < 10) %}
                      red
                    {% elif is_state(entity, 'idle') %}
                      blue
                    {% else %}
                      gold
                    {% endif %}
                  {% endif %}
                entity: sensor.epson_wf_3720_series
                fill_container: true
                layout: vertical
                multiline_secondary: true
                tap_action:
                  action: more-info
                hold_action:
                  action: more-info
                double_tap_action:
                  action: none
          - type: conditional
            conditions:
              - entity: sensor.epson_wf_3720_series
                state_not: unavailable
            card:
              type: custom:apexcharts-card
              chart_type: radialBar
              header:
                show: true
                show_states: true
                colorize_states: true
                title: Epson printer
              series:
                - entity: sensor.epson_wf_3720_series_black_ink
                  name: Black
                  color: black
                - entity: sensor.epson_wf_3720_series_cyan_ink
                  name: Cyan
                  color: cyan
                - entity: sensor.epson_wf_3720_series_magenta_ink
                  name: Magenta
                  color: magenta
                - entity: sensor.epson_wf_3720_series_yellow_ink
                  name: Yellow
                  color: yellow
